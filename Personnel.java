package QuanLyNhanSu;

import java.text.*;
import java.util.*;

public class Personnel extends General {
    // Properties (Thu·ªôc t√≠nh)
    private String code; // M√£ s·ªë
    private String position; // Ch·ª©c v·ª•
    private double factor; // H·ªá s·ªë
    private double agreementSalary; // L∆∞∆°ng th·ªèa thu·∫≠n
	public String setName;
    // Constructors (Kh·ªüi t·∫°o)
    public Personnel() {
    }

    public Personnel(String name, Date birthOfDate, boolean gender, Date workOfDate, String country,
                     String code, String position, double factor, double agreementSalary) {
        super(name, birthOfDate, gender, workOfDate, country);
        this.code = code;
        this.position = position;
        this.factor = factor;
        this.agreementSalary = agreementSalary;
    }
     // Get and Set (Tr·∫£ v·ªÅ gi√° tr·ªã cho bi·∫øn v√† ƒë·∫∑t gi√° tr·ªã)
	public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public String getPosition() {
        return position;
    }

    public void Position(String position) {
        this.position = position;
    }

    public double getFactor() {
        return factor;
    }

    public void setFactor(double factor) {
        this.factor = factor;
    }

    public double getAgreementSalary() {
        return agreementSalary;
    }

    public void setAgreementSalary(double agreementSalary) {
        this.agreementSalary = agreementSalary;
    }
    // Methods (Ph∆∞∆°ng th·ª©c)
    public double officialSalary(){ // L∆∞∆°ng ch√≠nh th·ª©c
		return this.agreementSalary + super.seniority(); // L∆∞∆°ng ch√≠nh th·ª©c + Ph·ª• c·∫•p th√¢m ni√™n
    }
    // Format (ƒê·ªãnh d·∫°ng)
    public String formatMoney(double number) { // ƒê·ªãnh d·∫°ng ti·ªÅn
        try {
            NumberFormat nf = new DecimalFormat("###,###");
            String value = nf.format(number);
            value = value.replaceAll(",", ".");
            return value + " VND";
        } catch (Exception e) {
            return "Sai ƒë·ªãnh d·∫°ng ü§îü§îü§î";
        }
    }

    private String convertBoolToString(Boolean gender) { // Chuy·ªÉn boolean sang chu·ªói
		if(gender == true)  
			return "Nam";
		else
			return "Nu";
    }

    private String convertDatetoString(Date date) { // Chuy·ªÉn ng√†y sang chu·ªói
		SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
		return sdf.format(date);
    }
    
    public void display() { // Hi·ªÉn th·ªã theo b·∫£ng
        String leftAlignFormat = "| %-22s | %-11s | %-9s | %-15s | %-11s | %-11s | %-20s | %-9s | %-19s | %-19s |%n";
        String line = "+------------------------+-------------+-----------+-----------------+-------------+-------------+----------------------+-----------+---------------------+---------------------+%n";
        System.out.format(leftAlignFormat, getName(), this.convertDatetoString(getBirthOfDate()), this.convertBoolToString(getGender()), this.convertDatetoString(getWokOfDate()), getCountry(), getCode(), getPosition(), getFactor(), this.formatMoney(getAgreementSalary()), this.formatMoney(officialSalary()));
        System.out.format(line);
    }
    
    @Override
	public boolean equals(Object obj) { // Truy v·∫•n ƒë·∫øn m√£ s·ªë
		if(obj instanceof Personnel) {
			Personnel epl = (Personnel)obj;
			return this.code.equals(epl.code);
		}
		return false;
    }
    
    String getLine() { // Ki·ªÉu d·ªØ li·ªáu ƒë∆∞a v√†o file
        return name+","+this.convertDatetoString(getBirthOfDate())+","+this.convertBoolToString(getGender())+","+this.convertDatetoString(getWokOfDate())+","+country+","+code+","+position+","+factor+","+this.formatMoney(getAgreementSalary())+","+this.formatMoney(officialSalary())+"\n";
    }
}
